name: GitHub Lint

on:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/github.yml'
      - 'github/**.tf'
      - 'github/**.lock.hcl'
  pull_request:
    paths:
      - '.github/workflows/github.yml'
      - 'github/**.tf'
      - 'github/**.lock.hcl'
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.IAC_TOKEN }}
  TENCENTCLOUD_SECRET_ID: ${{ secrets.TENCENTCLOUD_SECRET_ID }}
  TENCENTCLOUD_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SECRET_KEY }}

defaults:
  run:
    shell: bash

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        folder: ['github/repos', 'github/labels']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: ~1.0

      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=${{ matrix.folder }} fmt
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform -chdir=${{ matrix.folder }} init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=${{ matrix.folder }} validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=${{ matrix.folder }} plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.CI_PAT }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ github.action_path }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        id: apply
        run: terraform -chdir=${{ matrix.folder }} apply -auto-approve -no-color
